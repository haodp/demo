<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:cache="http://www.springframework.org/schema/cache"
        xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
	   default-lazy-init="true">

	<!-- Service注解类扫描 -->
	<context:component-scan base-package="com.demo.service"
							annotation-config="true"
							use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- 自动装载类(@Autowired) -->
	<context:annotation-config />

	<!-- 配置文件读入 ,多个用[,]隔开
	<context:property-placeholder location="," />-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:/config/jdbc.properties</value>
                <value>classpath:/config/app.properties</value>
                <value>classpath:/config/rabbit.properties</value>
            </list>
        </property>
    </bean>

	<!-- 数据连接事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <!-- SessionFactory设置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/config/mybatis-config.xml" />
    <!-- 当mybatis的xml文件和mapper接口不在相同包下时，需要用mapperLocations属性指定xml文件的路径。
         *是个通配符，代表所有的文件，**代表所有目录下 -->
    <property name="mapperLocations" value="classpath:mybatis/**/*.xml" />
	</bean>

<!-- Spring DataSource的删除，使用阿里开源DataSource
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${mysql.druid.driverClassName}" />
		<property name="url" value="${mysql.druid.url}" />
		<property name="username" value="${mysql.druid.username}" />
		<property name="password" value="${mysql.druid.password}" />
	</bean>
-->
<!--dd-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
	    <property name="driverClassName" value="${mysql.druid.driverClassName}" />
	    <property name="url" value="${mysql.druid.url}" />
	    <property name="username" value="${mysql.druid.username}" />
	    <property name="password" value="${mysql.druid.password}" />
	    <property name="filters" value="stat,wall" />
	    <property name="maxActive" value="${mysql.druid.maxActive}" />
	    <property name="initialSize" value="${mysql.druid.initialSize}" />
	</bean>

	<!-- basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.demo.dao.**" />
	</bean>

	<!-- 连接事务的注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--Http client Factory-->
    <bean id="httpClientFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="connectTimeout"  value="${ws.connectTimeout}"/>
        <property name="readTimeout"  value="${ws.readTimeout}"/>
    </bean>

    <!--RestTemplate-->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="httpClientFactory"/>
    </bean>


    <!-- druid -->
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="3000"/>
        <property name="logSlowSql" value="true"/>
        <property name="mergeSql" value="true"/>
    </bean>
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="mysql"/>
    </bean>
</beans>